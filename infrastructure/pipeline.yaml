---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Pipeline'
Parameters:
  ArtifactsBucketName:
    Type: String
  GitHubOAuthToken:
    Type: String
    NoEcho: true
Resources:
  PipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - 'codepipeline.amazonaws.com'
          Action:
          - 'sts:AssumeRole'
      ManagedPolicyArns:
      - 'arn:aws:iam::aws:policy/AdministratorAccess'
  CloudFormationRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - 'cloudformation.amazonaws.com'
          Action:
          - 'sts:AssumeRole'
      ManagedPolicyArns:
      - 'arn:aws:iam::aws:policy/AdministratorAccess'
  DeployLambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - 'lambda.amazonaws.com'
          Action:
          - 'sts:AssumeRole'
      ManagedPolicyArns:
      - 'arn:aws:iam::aws:policy/AdministratorAccess'
  Pipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactsBucketName
      Name: 'automation-for-the-people'
      RestartExecutionOnUpdate: true
      RoleArn: !Sub '${PipelineRole.Arn}'
      Stages:
      - Name: Source
        Actions:
        - Name: SourceAction
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Provider: GitHub
            Version: 1
          Configuration:
            Owner: michaelwittig
            Repo: 'automation-for-the-people'
            Branch: master
            OAuthToken: !Ref GitHubOAuthToken
          OutputArtifacts:
          - Name: Zip
          RunOrder: 1
      - Name: DeployPipeline
        Actions:
        - Name: DeployPipelineAction
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: 1
          Configuration:
            ActionMode: CREATE_UPDATE
            Capabilities: CAPABILITY_IAM
            RoleArn: !Sub '${CloudFormationRole.Arn}'
            StackName: 'aftp-pipeline'
            TemplatePath: 'Zip::infrastructure/pipeline.yaml'
          InputArtifacts:
          - Name: Zip
          RunOrder: 1
      - Name: DeployApplication
        Actions:
        - Name: DeployApplicationAction
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: 1
          Configuration:
            ActionMode: CREATE_UPDATE
            Capabilities: CAPABILITY_IAM
            RoleArn: !Sub '${CloudFormationRole.Arn}'
            StackName: 'aftp-application'
            TemplateConfiguration: 'Zip::infrastructure/application.input.json'
            TemplatePath: 'Zip::infrastructure/application.yaml'
          InputArtifacts:
          - Name: Zip
          RunOrder: 1
      - Name: DeployEnvironmentStage
        Actions:
        - Name: DeployEnvironmentStageAction
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: 1
          Configuration:
            ActionMode: CREATE_UPDATE
            Capabilities: CAPABILITY_IAM
            RoleArn: !Sub '${CloudFormationRole.Arn}'
            StackName: 'aftp-stage'
            OutputFileName: 'infrastructure/output-environment-stage.json'
            TemplateConfiguration: 'Zip::infrastructure/environment-stage.input.json'
            TemplatePath: 'Zip::infrastructure/environment.yaml'
          InputArtifacts:
          - Name: Zip
          OutputArtifacts:
          - Name: Stage
          RunOrder: 1
        - Name: DeployApplicationStageAction
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: ElasticBeanstalk
            Version: 1
          Configuration:
            ApplicationName: 'automation-for-the-people'
            EnvironmentName: 'automation-for-the-people-stage'
          InputArtifacts:
          - Name: Zip
          RunOrder: 2
